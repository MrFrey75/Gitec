// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TecCore.Data;

#nullable disable

namespace TecCore.Migrations.InfoBoard
{
    [DbContext(typeof(InfoBoardDbContext))]
    [Migration("20250305195002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("TecCore.Models.InfoBoard.AdminUser", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Uid");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.CarouselItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InfoBoardItemCarouselUid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InfoBoardItemCarouselUid");

                    b.ToTable("CarouselItem");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoard", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Uid");

                    b.ToTable("InfoBoards");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItem", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InfoBoardUid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Uid");

                    b.HasIndex("InfoBoardUid");

                    b.ToTable("InfoBoardItems");

                    b.HasDiscriminator<string>("ItemType").HasValue("Base");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemCarousel", b =>
                {
                    b.HasBaseType("TecCore.Models.InfoBoard.InfoBoardItem");

                    b.HasDiscriminator().HasValue("Carousel");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemHtml", b =>
                {
                    b.HasBaseType("TecCore.Models.InfoBoard.InfoBoardItem");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Html");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemImage", b =>
                {
                    b.HasBaseType("TecCore.Models.InfoBoard.InfoBoardItem");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Image");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemMarkdown", b =>
                {
                    b.HasBaseType("TecCore.Models.InfoBoard.InfoBoardItem");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("InfoBoardItems", t =>
                        {
                            t.Property("Content")
                                .HasColumnName("InfoBoardItemMarkdown_Content");
                        });

                    b.HasDiscriminator().HasValue("Markdown");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemRss", b =>
                {
                    b.HasBaseType("TecCore.Models.InfoBoard.InfoBoardItem");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Rss");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemText", b =>
                {
                    b.HasBaseType("TecCore.Models.InfoBoard.InfoBoardItem");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("InfoBoardItems", t =>
                        {
                            t.Property("Content")
                                .HasColumnName("InfoBoardItemText_Content");
                        });

                    b.HasDiscriminator().HasValue("Text");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.CarouselItem", b =>
                {
                    b.HasOne("TecCore.Models.InfoBoard.InfoBoardItemCarousel", null)
                        .WithMany("CarouselItems")
                        .HasForeignKey("InfoBoardItemCarouselUid");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItem", b =>
                {
                    b.HasOne("TecCore.Models.InfoBoard.InfoBoard", null)
                        .WithMany("InfoBoardItems")
                        .HasForeignKey("InfoBoardUid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoard", b =>
                {
                    b.Navigation("InfoBoardItems");
                });

            modelBuilder.Entity("TecCore.Models.InfoBoard.InfoBoardItemCarousel", b =>
                {
                    b.Navigation("CarouselItems");
                });
#pragma warning restore 612, 618
        }
    }
}
